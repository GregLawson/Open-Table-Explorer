{:current_branch_name => Branch.new(name: nil)
,
:start_time => Time.new(2017, 7, 18, 12, 9, Rational(24901148226, 1000000000), "-07:00"),
:command_string => '/usr/bin/time --verbose ruby -v -W0 /home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb',
:output => 'ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]
Loaded suite /home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test
Started
E
===============================================================================
Error: test_Constants(SambaTest):
  NameError: uninitialized constant Samba::Examples
  Did you mean?  Example
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:28:in `test_Constants\'
     25:   include Examples
     26: 
     27:   def test_Constants
  => 28:     line = Samba::Examples::Comment_line
     29:     capture = line.capture?(Comment_regexp)
     30:     assert_operator(1, :<=, capture.output[:comment].size)
     31:     assert_equal(nil, capture.output[:filesystem_image])
===============================================================================
.F
===============================================================================
Failure:
  self=$ mount -t cifs \Seagate-414103/Public /media/central -o ip=acer-desktop
  ,auto
  @errors="mount: only root can use \"--options\" option\nsh: 2: ,auto: not found\n"
  @process_status=#<Process::Status: pid 22960 exit 127>
  expected errors to be empty\n.
  <"mount: only root can use \"--options\" option\nsh: 2: ,auto: not found\n"> expected to be empty.
test_mount(SambaTest)
/home/greg/Desktop/src/Open-Table-Explorer/app/models/shell_command.rb:700:in `assert_post_conditions\'
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:158:in `test_mount\'
     155:   def test_mount
     156:     mount_point = \'/media/central\'
     157:     central = Samba.new(Default_server, \'\\Seagate-414103/Public\', mount_point, \'auto\')
  => 158:     central.mount.assert_post_conditions
     159:     assert_equal(central.mount_point)
     160:     puts \'!File.exists?(central.mount_point) = \' + !File.exist?(central.mount_point)
     161:     puts \'File.exists?(central.mount_point) = \' + File.exist?(central.mount_point)
===============================================================================
..E
===============================================================================
Error: test_parse_options(SambaTest):
  NameError: uninitialized constant Samba::Examples
  Did you mean?  Example
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:107:in `test_parse_options\'
     104:   def test_parse_options
     105:     options_string = \'ip=1.2.3.4,unix\'
     106:     assert_equal({ ip: \'1.2.3.4\', unix: nil }, Samba.parse_options(options_string))
  => 107:     options = Samba.parse_options(Samba::Examples::Options_string)
     108:     assert_instance_of(Hash, options)
     109:     assert_equal(nil, options[:auto])
     110:     assert_equal(nil, options[:rw])
===============================================================================
E
===============================================================================
Error: test_servers(SambaTest): TypeError: no implicit conversion of LimitCapture into String
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:93:in `test_servers\'
     90:   end # workgroups
     91: 
     92:   def test_servers
  => 93:     assert_includes(\'\', Smb_servers.output.capture?(Smb_tree_regexp, LimitCapture))
     94:     assert_includes(\'\', Samba.servers(Samba::Examples::Default_workgroup))
     95:   end # servers
     96: 
===============================================================================
E
===============================================================================
Error: test_tree(SambaTest):
  NameError: uninitialized constant Samba::Examples
  Did you mean?  Example
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:100:in `test_tree\'
      97:   def test_tree
      98:     workgroup = Default_workgroup
      99:     server = \'\'
  => 100:     assert_instance_of(Hash, Samba.tree(Samba::Examples::Default_workgroup, Samba::Examples::Default_server), Smb_tree.inspect)
     101:     assert_includes(Default_share, Samba.tree(Samba::Examples::Default_workgroup, Samba::Examples::Default_server).values, Smb_tree.inspect)
     102:   end # tree
     103: 
===============================================================================
F
===============================================================================
Failure: test_umount(SambaTest)
/home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb:170:in `test_umount\'
     167:     mount_point = \'/media/central\'
     168:     central = Samba.new(Default_server, \'\\Seagate-414103/Public\', mount_point, \'auto\')
     169:     central.assert_post_conditions
  => 170:     assert_equal(false, central.mounted?)
     171:     central.assert_unmounted
     172:   end # umount
     173: 
<false> expected but was
<true>

diff:
? false
? tru  
===============================================================================
.

Finished in 0.17911436 seconds.
------
10 tests, 130 assertions, 2 failures, 4 errors, 0 pendings, 0 omissions, 0 notifications
40% passed
------
55.83 tests/s, 725.79 assertions/s
',
:errors => {:syserr => 'Command exited with non-zero status 1
	Command being timed: "ruby -v -W0 /home/greg/Desktop/src/Open-Table-Explorer/test/unit/samba_test.rb"
	User time (seconds): 1.84
	System time (seconds): 0.26
	Percent of CPU this job got: 49%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:04.27
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 39176
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 120
	Minor (reclaiming a frame) page faults: 18439
	Voluntary context switches: 312
	Involuntary context switches: 265
	Swaps: 0
	File system inputs: 20824
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1
'
}

}
