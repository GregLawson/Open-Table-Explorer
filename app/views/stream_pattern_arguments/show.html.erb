<p id="notice"><%= notice %></p>
 <%= render :partial =>"shared/error_messages.html.erb", :locals => { :record => @stream_pattern } %>
<p>
  <b>Id:</b>
  <%= @stream_pattern_argument.id.inspect %>
</p>
<%= render :partial =>'stream_pattern_arguments/show_partial', :locals => { :@stream_pattern_argument => @stream_pattern_argument } %>
<% if Generic_Table.is_generic_table?(@stream_pattern_argument.class.name) then %>
<% require 'global.rb' %>
<% if @stream_pattern_argument.association_has_data(:stream_patterns) then %>
<%= render :partial =>'stream_patterns/index_partial', :locals => { :@stream_patterns => @stream_pattern_argument.stream_patterns } %>
<% else %>
<p>
  <b>@stream_pattern_argument.class.is_matching_association?(:stream_patterns):</b>
  < %= @stream_pattern_argument.class.is_matching_association?(:stream_patterns) %>
</p>
<p>
  <b>@stream_pattern_argument.class.association_to_type(:stream_patterns):</b>
  <%= @stream_pattern_argument.class.association_to_type(:stream_patterns) %>
</p>
<p>
  <b>@stream_pattern_argument.class.association_macro_type(:stream_patterns):</b>
  <%= @stream_pattern_argument.class.association_macro_type(:stream_patterns) %>
</p>
<p>
  <b>@stream_pattern_argument.class.association_type(:stream_patterns):</b>
  <%= @stream_pattern_argument.class.association_type(:stream_patterns) %>
</p>
<p>
  <b>@stream_pattern_argument.association_state(:stream_patterns):</b>
  <%= @stream_pattern_argument.association_state(:stream_patterns) %>
</p>

< % if StreamMethodArgument.find_all_by_stream_pattern_argument_id(@stream_pattern_argument.id ) then %>
<H1><B>No data in associaton. Listing all data of model with matching Id.</B></H1>
< %= render :partial =>'stream_patterns/index_partial', :locals => { :@stream_patterns => StreamPatternArgument.find_all_by_stream_pattern_argument_id(@stream_pattern_argument.id ) } %>
< % else %>
<H1><B>No data in associaton. Listing all data of model.</B></H1>
<%= render :partial =>'stream_patterns/index_partial', :locals => { :@stream_patterns => StreamPatternArgument.all } %>
< % end #if %>
<%= @stream_pattern_argument.stream_patterns.inspect  %>
<P>@stream_pattern_argument.class.association_names=
<%= @stream_pattern_argument.class.association_names.inspect %>
<P> system(@stream_pattern_argument.class.association_grep('has_many',:stream_patterns)) 
<%= system(@stream_pattern_argument.class.association_grep('has_many',:stream_patterns)) %>
<P> system(StreamPatternArgument.association_grep('belongs_to',:stream_pattern_arguments)) 
<%= system(StreamPatternArgument.association_grep('belongs_to',:stream_pattern_arguments)) %>
<% end #if %>
<% end #if %>
